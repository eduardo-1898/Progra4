//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KN_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Services365Entities : DbContext
    {
        public Services365Entities()
            : base("name=Services365Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Estado> Estadoes { get; set; }
        public virtual DbSet<Faq> Faqs { get; set; }
        public virtual DbSet<Inventario> Inventarios { get; set; }
        public virtual DbSet<Mensaje> Mensajes { get; set; }
        public virtual DbSet<Rol> Rols { get; set; }
        public virtual DbSet<Servicio> Servicios { get; set; }
        public virtual DbSet<Tiquete> Tiquetes { get; set; }
        public virtual DbSet<Usuario> Usuarios { get; set; }
    
        public virtual int ActualizarInventario(Nullable<int> idInventario, string tipoEquipo, string marca, string modelo, string serie, string nombre, string versionInv)
        {
            var idInventarioParameter = idInventario.HasValue ?
                new ObjectParameter("IdInventario", idInventario) :
                new ObjectParameter("IdInventario", typeof(int));
    
            var tipoEquipoParameter = tipoEquipo != null ?
                new ObjectParameter("TipoEquipo", tipoEquipo) :
                new ObjectParameter("TipoEquipo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var versionInvParameter = versionInv != null ?
                new ObjectParameter("VersionInv", versionInv) :
                new ObjectParameter("VersionInv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarInventario", idInventarioParameter, tipoEquipoParameter, marcaParameter, modeloParameter, serieParameter, nombreParameter, versionInvParameter);
        }
    
        public virtual ObjectResult<BuscarTiquete_Result> BuscarTiquete(Nullable<int> idTiquete)
        {
            var idTiqueteParameter = idTiquete.HasValue ?
                new ObjectParameter("IdTiquete", idTiquete) :
                new ObjectParameter("IdTiquete", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarTiquete_Result>("BuscarTiquete", idTiqueteParameter);
        }
    
        public virtual int CambiarContrasena(string correo, string contrasena)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CambiarContrasena", correoParameter, contrasenaParameter);
        }
    
        public virtual ObjectResult<ConsultarFaq_Result> ConsultarFaq(string titulo)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarFaq_Result>("ConsultarFaq", tituloParameter);
        }
    
        public virtual ObjectResult<ConsultarInventario_Result> ConsultarInventario(string idInventario)
        {
            var idInventarioParameter = idInventario != null ?
                new ObjectParameter("IdInventario", idInventario) :
                new ObjectParameter("IdInventario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarInventario_Result>("ConsultarInventario", idInventarioParameter);
        }
    
        public virtual ObjectResult<ConsultarServicio_Result> ConsultarServicio(string idServicio)
        {
            var idServicioParameter = idServicio != null ?
                new ObjectParameter("idServicio", idServicio) :
                new ObjectParameter("idServicio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarServicio_Result>("ConsultarServicio", idServicioParameter);
        }
    
        public virtual ObjectResult<ConsultarTodoEstado_Result> ConsultarTodoEstado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodoEstado_Result>("ConsultarTodoEstado");
        }
    
        public virtual ObjectResult<ConsultarTodoFaqs_Result> ConsultarTodoFaqs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodoFaqs_Result>("ConsultarTodoFaqs");
        }
    
        public virtual ObjectResult<ConsultarTodoInventario_Result> ConsultarTodoInventario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodoInventario_Result>("ConsultarTodoInventario");
        }
    
        public virtual ObjectResult<ConsultarTodoServicios_Result> ConsultarTodoServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTodoServicios_Result>("ConsultarTodoServicios");
        }
    
        public virtual ObjectResult<ConsultarUsuarios_Result> ConsultarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuarios_Result>("ConsultarUsuarios");
        }
    
        public virtual int CrearInventario(string tipoEquipo, string marca, string modelo, string serie, string nombre, string versionInv)
        {
            var tipoEquipoParameter = tipoEquipo != null ?
                new ObjectParameter("TipoEquipo", tipoEquipo) :
                new ObjectParameter("TipoEquipo", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var versionInvParameter = versionInv != null ?
                new ObjectParameter("VersionInv", versionInv) :
                new ObjectParameter("VersionInv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearInventario", tipoEquipoParameter, marcaParameter, modeloParameter, serieParameter, nombreParameter, versionInvParameter);
        }
    
        public virtual int CrearTiquete(string titulo, string descripcion, Nullable<System.DateTime> fechaFinal, Nullable<int> idUsuario, Nullable<int> idTecnico, Nullable<int> idEstado, Nullable<int> idServicio, Nullable<int> idFaq, Nullable<int> idInvetario)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("Titulo", titulo) :
                new ObjectParameter("Titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idTecnicoParameter = idTecnico.HasValue ?
                new ObjectParameter("IdTecnico", idTecnico) :
                new ObjectParameter("IdTecnico", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            var idServicioParameter = idServicio.HasValue ?
                new ObjectParameter("IdServicio", idServicio) :
                new ObjectParameter("IdServicio", typeof(int));
    
            var idFaqParameter = idFaq.HasValue ?
                new ObjectParameter("IdFaq", idFaq) :
                new ObjectParameter("IdFaq", typeof(int));
    
            var idInvetarioParameter = idInvetario.HasValue ?
                new ObjectParameter("IdInvetario", idInvetario) :
                new ObjectParameter("IdInvetario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearTiquete", tituloParameter, descripcionParameter, fechaFinalParameter, idUsuarioParameter, idTecnicoParameter, idEstadoParameter, idServicioParameter, idFaqParameter, idInvetarioParameter);
        }
    
        public virtual int EditarTiquete(Nullable<int> idTiquete, Nullable<int> idTecnico, Nullable<int> idEstado)
        {
            var idTiqueteParameter = idTiquete.HasValue ?
                new ObjectParameter("IdTiquete", idTiquete) :
                new ObjectParameter("IdTiquete", typeof(int));
    
            var idTecnicoParameter = idTecnico.HasValue ?
                new ObjectParameter("IdTecnico", idTecnico) :
                new ObjectParameter("IdTecnico", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditarTiquete", idTiqueteParameter, idTecnicoParameter, idEstadoParameter);
        }
    
        public virtual int EliminarTiquete(Nullable<int> idTiquete)
        {
            var idTiqueteParameter = idTiquete.HasValue ?
                new ObjectParameter("IdTiquete", idTiquete) :
                new ObjectParameter("IdTiquete", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarTiquete", idTiqueteParameter);
        }
    
        public virtual ObjectResult<IniciarSesion_Result> IniciarSesion(string correo, string contrasenna)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesion_Result>("IniciarSesion", correoParameter, contrasennaParameter);
        }
    
        public virtual int InsertarMensaje(string mensaje, Nullable<int> idTiquete, Nullable<int> idUsuario)
        {
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("Mensaje", mensaje) :
                new ObjectParameter("Mensaje", typeof(string));
    
            var idTiqueteParameter = idTiquete.HasValue ?
                new ObjectParameter("IdTiquete", idTiquete) :
                new ObjectParameter("IdTiquete", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarMensaje", mensajeParameter, idTiqueteParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<ListarTiquetes_Result> ListarTiquetes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarTiquetes_Result>("ListarTiquetes");
        }
    
        public virtual int RegistrarUsuario(string alias, string nombre, string apellido1, string apellido2, string correo, string contrasenna, Nullable<int> idRol)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            var idRolParameter = idRol.HasValue ?
                new ObjectParameter("IdRol", idRol) :
                new ObjectParameter("IdRol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", aliasParameter, nombreParameter, apellido1Parameter, apellido2Parameter, correoParameter, contrasennaParameter, idRolParameter);
        }
    
        public virtual ObjectResult<VerMensaje_Result> VerMensaje(Nullable<int> idTiquete)
        {
            var idTiqueteParameter = idTiquete.HasValue ?
                new ObjectParameter("IdTiquete", idTiquete) :
                new ObjectParameter("IdTiquete", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VerMensaje_Result>("VerMensaje", idTiqueteParameter);
        }
    }
}
